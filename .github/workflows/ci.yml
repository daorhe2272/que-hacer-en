name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

env:
  # Variables m√≠nimas para builds
  NEXT_PUBLIC_API_URL: http://localhost:4001

jobs:
  lint:
    name: Lint (web + api)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8.15.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint web
        run: pnpm --filter @que-hacer-en/web run lint

      - name: Lint api
        run: pnpm --filter @que-hacer-en/api run lint

  test_api:
    name: Unit Tests (api)
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8.15.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build shared package
        run: pnpm --filter @que-hacer-en/shared run build

      - name: Test api (coverage)
        run: pnpm --filter @que-hacer-en/api run test:coverage

      - name: Upload coverage artifact (api)
        uses: actions/upload-artifact@v4
        with:
          name: api-coverage
          path: packages/api/coverage
          if-no-files-found: error
          retention-days: 7

  build:
    name: Build (web + api)
    runs-on: ubuntu-latest
    needs: [lint, test_api]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8.15.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build shared package
        run: pnpm --filter @que-hacer-en/shared run build

      - name: Build api
        run: pnpm --filter @que-hacer-en/api run build

      - name: Build web
        env:
          NEXT_PUBLIC_API_URL: http://localhost:4001
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
        run: pnpm --filter @que-hacer-en/web run build

  docker:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/que-hacer-en
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            NEXT_PUBLIC_SUPABASE_URL=${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
            NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
            NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }}
            NEXT_PUBLIC_WEB_URL=${{ secrets.NEXT_PUBLIC_WEB_URL }}

      - name: Test Docker image
        run: |
          docker run --rm -d -p 4000:4000 -p 4001:4001 \
            -e DATABASE_URL="mock://test" \
            -e NEXT_PUBLIC_SUPABASE_URL="https://test.supabase.co" \
            -e NEXT_PUBLIC_SUPABASE_ANON_KEY="test-key" \
            --name test-container \
            ghcr.io/${{ github.repository_owner }}/que-hacer-en:latest
          
          # Wait for container to start
          sleep 30
          
          # Test health endpoints
          curl -f http://localhost:4001/api/health || exit 1
          curl -f http://localhost:4000 || exit 1
          
          # Cleanup
          docker stop test-container

  deploy:
    name: Deploy to Azure Container Apps
    runs-on: ubuntu-latest
    needs: docker
    if: github.ref == 'refs/heads/master'
    permissions:
      id-token: write # Required for Azure OIDC authentication
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.QUEHACERENAPP_AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.QUEHACERENAPP_AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.QUEHACERENAPP_AZURE_SUBSCRIPTION_ID }}

      - name: Deploy to Azure Container Apps
        uses: azure/CLI@v2
        with:
          azcliversion: latest
          inlineScript: |
            # Set registry credentials first
            az containerapp registry set \
              --name que-hacer-en-app \
              --resource-group background-removal \
              --server ghcr.io \
              --username ${{ github.actor }} \
              --password ${{ secrets.GITHUB_TOKEN }}
            
            # Then update the image (using short SHA to match Docker tag format)
            SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)
            az containerapp update \
              --name que-hacer-en-app \
              --resource-group background-removal \
              --image ghcr.io/${{ github.repository_owner }}/que-hacer-en:master-${SHORT_SHA}



